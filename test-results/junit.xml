<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="36" failures="0" errors="0" time="0.301">
  <testsuite name="Job ID Generation" errors="0" failures="0" skipped="0" timestamp="2025-07-14T03:10:29" time="0.223" tests="14">
    <testcase classname="Job ID Generation › generateJobId" name="should generate a job ID" time="0.002">
    </testcase>
    <testcase classname="Job ID Generation › generateJobId" name="should generate unique job IDs" time="0.034">
    </testcase>
    <testcase classname="Job ID Generation › generateJobId" name="should generate job IDs with consistent format" time="0">
    </testcase>
    <testcase classname="Job ID Generation › generateJobId" name="should generate job IDs with timestamp component" time="0">
    </testcase>
    <testcase classname="Job ID Generation › generateJobId" name="should generate job IDs with random component" time="0.001">
    </testcase>
    <testcase classname="Job ID Generation › generateJobId" name="should generate job IDs with reasonable length" time="0">
    </testcase>
    <testcase classname="Job ID Generation › generateJobId" name="should generate job IDs that are URL-safe" time="0.001">
    </testcase>
    <testcase classname="Job ID Generation › generateJobId" name="should generate job IDs in chronological order when called sequentially" time="0.01">
    </testcase>
    <testcase classname="Job ID Generation › generateJobId" name="should handle rapid generation without collisions" time="0.001">
    </testcase>
    <testcase classname="Job ID Generation › generateJobId" name="should generate consistent format across multiple calls" time="0.002">
    </testcase>
    <testcase classname="Job ID Generation › generateJobId" name="should generate job IDs with sufficient entropy" time="0.026">
    </testcase>
    <testcase classname="Job ID Generation › generateJobId" name="should generate job IDs that sort chronologically by string comparison" time="0.012">
    </testcase>
    <testcase classname="Job ID Generation › edge cases" name="should handle system clock changes gracefully" time="0.001">
    </testcase>
    <testcase classname="Job ID Generation › edge cases" name="should generate valid job IDs under high load simulation" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Message Validation" errors="0" failures="0" skipped="0" timestamp="2025-07-14T03:10:29" time="0.049" tests="22">
    <testcase classname="Message Validation › validatePipelineRequest" name="should validate complete valid request" time="0.001">
    </testcase>
    <testcase classname="Message Validation › validatePipelineRequest" name="should validate minimal valid request" time="0">
    </testcase>
    <testcase classname="Message Validation › validatePipelineRequest" name="should reject missing type" time="0.001">
    </testcase>
    <testcase classname="Message Validation › validatePipelineRequest" name="should reject invalid type" time="0.001">
    </testcase>
    <testcase classname="Message Validation › validatePipelineRequest" name="should reject missing pipeline" time="0.001">
    </testcase>
    <testcase classname="Message Validation › validatePipelineRequest" name="should reject empty pipeline" time="0">
    </testcase>
    <testcase classname="Message Validation › validatePipelineRequest" name="should reject non-string pipeline" time="0.001">
    </testcase>
    <testcase classname="Message Validation › validatePipelineRequest" name="should reject missing parameters" time="0">
    </testcase>
    <testcase classname="Message Validation › validatePipelineRequest" name="should reject null parameters" time="0.001">
    </testcase>
    <testcase classname="Message Validation › validatePipelineRequest" name="should reject non-object parameters" time="0">
    </testcase>
    <testcase classname="Message Validation › validatePipelineRequest" name="should accept array parameters (arrays are objects in JS)" time="0">
    </testcase>
    <testcase classname="Message Validation › validatePipelineRequest" name="should accept valid requestId" time="0">
    </testcase>
    <testcase classname="Message Validation › validatePipelineRequest" name="should reject non-string requestId" time="0">
    </testcase>
    <testcase classname="Message Validation › validatePipelineRequest" name="should accept empty requestId (empty string is still a string)" time="0.001">
    </testcase>
    <testcase classname="Message Validation › validatePipelineRequest" name="should accept valid options object" time="0.002">
    </testcase>
    <testcase classname="Message Validation › validatePipelineRequest" name="should reject non-object options" time="0.001">
    </testcase>
    <testcase classname="Message Validation › validatePipelineRequest" name="should accept null options (null is falsy, so validation skips)" time="0">
    </testcase>
    <testcase classname="Message Validation › validatePipelineRequest" name="should accept array options (arrays are objects in JS)" time="0">
    </testcase>
    <testcase classname="Message Validation › validatePipelineRequest" name="should collect multiple validation errors" time="0.001">
    </testcase>
    <testcase classname="Message Validation › validatePipelineRequest" name="should handle undefined payload" time="0">
    </testcase>
    <testcase classname="Message Validation › validatePipelineRequest" name="should handle null payload" time="0">
    </testcase>
    <testcase classname="Message Validation › validatePipelineRequest" name="should handle empty object payload" time="0.001">
    </testcase>
  </testsuite>
</testsuites>